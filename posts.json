[
  {
    "title": "Creating my Digital Garden: The first step",
    "stage": "growing",
    "tags": [
      "digital-garden",
      "blog",
      "writing",
      "tech"
    ],
    "content": "\n                I came across the concept of digital gardening randomly one day while scrolling through Youtube. I found the concept really interesting and wanted to explore further. I read a few articles to understand it completely and also wrote an article myself. But I didn't actually made my own digital garden till now. Here I am after 3 month working on this again because this concept never truly left my mind. The idea of growing your thoughts and ideas bit by bit and in public was interesting and I want to give it shot. This is the first version of something bigger I'm planning to create in the next few months. \n                <div>\n                    <h1 class=\"text-xl font-bold mt-5 mb-5\">Technical Step-by-Step process until now:</h1>\n                    <div class=\"mb-5\">\n                        <h1 class=\"font-bold\">1. Choosing tech stack</h1>\n                        <p>I wanted to keep things simple and lightweight, so I went with:\n                            </p><ul class=\"list-disc ml-6\">\n                                <li>HTML + Tailwind CSS (for structure and styling)</li>\n                                <li>JavaScript (for interactivity)</li>\n                                <li>Node.js (for scripting and automation (file handling, JSON updates))</li>\n                            </ul>\n                        <p></p>\n                    </div>\n                    <div class=\"mb-5\">\n                        <h1 class=\"font-bold\">2. Setting Up the Project Structure</h1>\n                        <p>I organised my folder structure as shown in the screenshot:\n                            <img src=\"/assets/file_images/file_structure.png\" class=\"mt-3 mb-3 h-[400px]\">\n                            </p><ul class=\"list-disc ml-6\">\n                                <li>posts.json - central store of metadata about all posts (title, status, dates, content, etc.)\n                                </li><li>admin.js - script for creating new posts from templates\n                                </li><li>edit.js - script for syncing post content back into posts.json\n                            </li></ul>\n                        <p></p>\n                    </div>\n                    <div class=\"mb-5\">\n                        <h1 class=\"font-bold\">3. Creating the Templates</h1>\n                        <p>Inside the template/ folder, I built starter HTML files for each category (seed, growing, harvested, abandoned).\n                            <img src=\"/assets/file_images/seed_template_screenshot.png\" class=\"mt-3 mb-3 border border-black\">\n                            <img src=\"/assets/file_images/growing_template_screenshot.png\" class=\"mt-3 mb-3 border border-black\">\n                            <img src=\"/assets/file_images/harvested_template_screenshot.png\" class=\"mt-3 mb-3 border border-black\">\n                            <img src=\"/assets/file_images/abandoned_template_screenshot.png\" class=\"mt-3 mb-3 border border-black\">\n                        </p>\n                    </div>\n                    <div class=\"mb-5\">\n                        <h1 class=\"font-bold\">4. Building the admin.js Script</h1>\n                        <p>\n                            The goal of admin.js is to automate adding new posts.\n                            <img src=\"/assets/file_images/admin_script_output.png\" class=\"mt-3 mb-3\"> \n                            </p><ul class=\"list-disc ml-6\">\n                                <li>Takes a template (based on category).</li>\n                                <li>Creates a new HTML file in the right folder.</li>\n                                <li>Updates posts.json with metadata: title, status, createdDate, lastUpdated, content.</li>\n                            </ul>\n                            This way, I don’t need to manually edit both HTML and JSON whenever I add something new.\n                        <p></p>\n                    </div>\n                    <div class=\"mb-5\">\n                        <h1 class=\"font-bold\">5. Building the edit.js Script</h1>\n                        <p>\n                            The goal of edit.js is to sync edits made in HTML files back into posts.json.\n                            </p><ul class=\"list-disc ml-6\">\n                                <li>Reads through all folders (seeds/, growing/, etc.).</li>\n                                <li>Extracts HTML inside <pre><code>&lt;div id=\"content\"&gt;...&lt;/div&gt;</code></pre></li>\n                                <li>Updates the matching entry in posts.json.</li>\n                                <li>Refreshes lastUpdated.</li>\n                            </ul>\n                            That way, I can freely edit my notes in HTML while keeping posts.json as the single source of truth. I used Cheerio (a Node.js library for HTML parsing, like jQuery for the server) to make extracting and updating the content straightforward.\n                        <p></p>\n                    </div>\n                    <div class=\"mb-5\">\n                        <h1 class=\"font-bold\">6. Why I’m Using posts.json Instead of a Database</h1>\n                        <p>\n                            I decided to use a JSON file instead of setting up a full database because:\n                            </p><ul class=\"list-disc ml-6\">\n                                <li>Simplicity - I don’t need a server or database running in the background.</li>\n                                <li>Version Control Friendly - JSON works great with Git, so every change is tracked.</li>\n                                <li>Good Enough for Now - A digital garden doesn’t need heavy DB features; JSON is fast for a few dozen posts.</li>\n                            </ul>\n                            When the collection grows and crosses around 100 posts, I’ll port everything to a proper database.\n                        <p></p>\n                    </div>\n                    <div class=\"mb-5\">\n                        <h1 class=\"font-bold\">7. Why I Run Scripts Locally Instead of Making a UI</h1>\n                        <p>\n                            I could have built a full admin panel, but I intentionally chose to run admin.js and edit.js manually:\n                            </p><ul class=\"list-disc ml-6\">\n                                <li>Control - I can run them whenever I want, without extra UI complexity.</li>\n                                <li>Focus on Content - I don’t want to spend weeks building an editor when my goal is to write and grow ideas.</li>\n                                <li>Learning Purpose - Running Node.js scripts teaches me file handling and parsing in a clean way.</li>\n                                <li>Flexibility - I can later build a UI on top of this system if I ever feel the need.</li>\n                            </ul>\n                        <p></p>\n                    </div>\n                    <div class=\"mb-5\">\n                        <h1 class=\"font-bold\">8. Keeping index.html Updated</h1>\n                        <p>The index.html file serves as the map of my garden. It groups posts by category and uses posts.json as the source of truth for links and metadata. </p>\n                    </div>\n                    <div class=\"mb-5\">\n                        <h1 class=\"font-bold\">9. Workflow I Follow</h1>\n                        <p>\n                            </p><ul class=\"list-disc ml-6\">\n                                <li>Run admin.js - create a new note from template.</li>\n                                <li>Edit the HTML content - write and style freely with Tailwind.</li>\n                                <li>Run edit.js - sync back into posts.json.</li>\n                                <li>Open index.html - view the updated garden.</li>\n                            </ul>\n                        <p></p>\n                    </div>\n\n\n                </div>\n            ",
    "links": [
      "https://medium.com/@chhavidhankhar07/escaping-the-infinite-scroll-why-im-starting-a-digital-garden-35c9f70f922b"
    ],
    "dates": {
      "planted": "2025-09-24T11:21:37.919Z",
      "growingStarted": "2025-09-25T14:51:16.729Z",
      "harvestedOn": null,
      "abandonedOn": null,
      "lastUpdated": "2025-10-01T07:08:07.051Z"
    },
    "link": "growing/creating-my-digital-garden:-the-first-step.html"
  }
]